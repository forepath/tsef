# This file is generated by Nx.
# Build the docker image with `npx nx docker:build backend-agent-manager`.
# Tip: Modify "docker:build" options in project.json to change docker build args.
#
# Run the container with `nx docker:run backend-agent-manager -p 3000:3000`.
#
FROM docker.io/debian:trixie

ENV HOST=0.0.0.0
ENV PORT=3000

WORKDIR /app
EXPOSE ${PORT}

# Copy application code
COPY . /app

# Install required dependencies
RUN apt-get update && apt-get install -y curl bash ca-certificates && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Node.js via nvm
ENV NVM_DIR=/root/.nvm
ENV NODE_VERSION=22.12.0

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash \
  && . $NVM_DIR/nvm.sh \
  && nvm install $NODE_VERSION \
  && nvm alias default $NODE_VERSION \
  && nvm use default \
  && echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc \
  && echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> ~/.bashrc \
  && echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' >> ~/.bashrc

# Install Docker CLI for Docker-in-Docker functionality
RUN apt-get update && \
    apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y docker-ce-cli && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install dependencies
RUN . $NVM_DIR/nvm.sh && npm ci

# Start the application
CMD ["/bin/bash", "-c", ". $NVM_DIR/nvm.sh && node main.js"]
